function [filename,dset,DatumDateNum,DateTimeCell]=create_struct_hdf5_ICES(ices_struct,instr_settings,ices_info,kalibrering,uu_idNr)
% 2020 ICES
% h5disp('C:\svn\matlab_common\ProcesseringLjuddata\ICES\Sample.h5')
%File information group:
Email='Emilia.lalander@foi.se';
CreationDate=char(datetime('now','TimeZone','UTC','Format','yyyy-MM-dd HH:mm:ss''Z'''));
StartDate=datestr(ices_struct.time_vec(1),'yyyy-mm-dd HH:MM:SSZ');
EndDate=datestr(ices_struct.time_vec(end),'yyyy-mm-dd HH:MM:SSZ');
Institution='5439'; %EDMO-kod f√∂r FOI
Contact='Emilia Lalander';
CountryCode='SE';

%Metadata group:
StationCode=ices_info.StationCode;

getHydrophoneType
HydrophoneSerialNumber= instr_settings.hydrophoneNr;
getRecorderType
% RecorderType=           [instr_settings.manufacturer ' ' instr_settings.instrument];
RecorderSerialNumber=   instr_settings.serial;
MeasurementHeight=      ices_info.measurement_height;
MeasurementPurpose=     ices_info.MeasurementPurpose;
MeasurementSetup=       ices_info.MeasurementSetup;
RigDesign=              ices_info.RigDesign;
FrequencyCount=         int64(max(size(ices_struct.ters_centre)));
FrequencyIndex=         ices_struct.ters_centre';

FrequencyUnit=          'Hz';
ChannelCount=           int64(instr_settings.channel);
MeasurementTotalNo=     int64(length(ices_struct.time_vec));
MeasurementUnit=        'SPL';

averag_time=seconds(ices_struct.time_vec(2)-ices_struct.time_vec(1));
AveragingTime=          int64(averag_time);
ProcessingAlgorithm =   'JOMO';
DataUUID=               ices_info.DataUUID;
DatasetVersion=         ices_info.version; 

getCalibrationProcedure
CalibrationDateTime=    datestr(kalibrering{2},'yyyy-mm-dd HH:MM:SSZ');

Comments=               ices_info.comments;

%%% Data group
DatumDateNum=ices_struct.time_vec;
ices_struct.time_vec.Format='yyyy-MM-dd HH:mm:ss''Z''';
DateTimeCell=cellstr(char(ices_struct.time_vec));
LeqMeasurementsOfChannel1=ices_struct.SPL_1_3_octave'; %Need to be one frequency per column

filename=['ICES_' CountryCode '_' StationCode '_' datestr(ices_struct.time_vec(1),'yymmdd') '_'  datestr(ices_struct.time_vec(end),'yymmdd')];
if isempty(RecorderSerialNumber)
    RecorderSerialNumber='Unknown';
end
dset = struct(...
    'FileInformation', struct( ...
        'Email',Email, ...
        'CreationDate',CreationDate, ...
        'StartDate',StartDate,...
        'EndDate',EndDate,...
        'Institution',Institution,...
        'Contact',Contact,...
        'CountryCode',CountryCode,...
        'StationCode',StationCode),...
    'Metadata',struct( ...
        'HydrophoneType',HydrophoneType, ...
        'HydrophoneSerialNumber', HydrophoneSerialNumber, ...
        'RecorderType',RecorderType,...
        'RecorderSerialNumber',RecorderSerialNumber,...
        'MeasurementHeight', MeasurementHeight, ...
        'MeasurementPurpose',MeasurementPurpose, ...
        'MeasurementSetup', MeasurementSetup, ...
        'RigDesign',RigDesign,...
        'FrequencyCount', FrequencyCount, ...
        'FrequencyIndex', FrequencyIndex, ...
        'FrequencyUnit', FrequencyUnit, ...
        'ChannelCount',ChannelCount,...
        'MeasurementTotalNo', MeasurementTotalNo, ...
        'MeasurementUnit',MeasurementUnit,...
        'AveragingTime',AveragingTime, ...
        'ProcessingAlgorithm',ProcessingAlgorithm,...
        'DataUUID', DataUUID, ...
        'DatasetVersion',DatasetVersion, ... 
        'CalibrationProcedure',CalibrationProcedure, ...
        'CalibrationDateTime',CalibrationDateTime, ...
        'Comments',Comments),...
    'Data',struct(...
        'LeqMeasurementsOfChannel1', LeqMeasurementsOfChannel1') ... 
);
        
        
